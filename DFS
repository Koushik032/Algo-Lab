#include <bits/stdc++.h>
using namespace std;
int visit[1000];
vector <int> vv[1000];
stack <int> Stack;

int dfs(int src, int target) {
    Stack.push(src);

    while(!Stack.empty()) {
        int top = Stack.top();
        Stack.pop();
        visit[top] = 1;

        for(int i = 0; i < vv[top].size(); i++ ) {
//            cout << top << " -> " << vv[top][i] << endl;
            int connectedNode = vv[top][i];
            //if (connectedNode == target)
              //  return 1;
            if ( visit[connectedNode] == 0 )
                Stack.push(connectedNode);
        }
        //cout << endl;
    }
    return 0;
}

int main() {

    int edge;
    cout << "Enter many edges " << "are in the graph: ";
    cin >> edge;

    int to, from, src, target;
    cout << "Enter to and from" << endl;

    for(int i = 0; i < edge; i++ ) {
        cin >> to >> from;

        vv[to].push_back(from);
        vv[from].push_back(to);
    }


    cout << "Enter source and target: ";
    cin >> src >> target;

    cout << dfs(src, target) << endl;
}
